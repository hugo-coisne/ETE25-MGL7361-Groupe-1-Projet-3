@startuml classes
'https://plantuml.com/class-diagram

'skinparam package {
'    BackgroundColor #lightgrey/white
'    ArrowColor SeaGreen
'    BorderColor #black
'    BackgroundColor  #orange\white 
'}

package account {

    package account.presentation {

        interface CartAPI {
            + CartDTO getCart()
            + void addToCart(Book book, int quantity)
            + void removeFromCart(Book book)
            + void clearCart()
            + double getTotalPrice()
        }

        class CartAPIImpl implements CartAPI

        interface AccountAPI {
            + AccountDTO signin(String email, String password)
            + void signup(String firstName, String lastName, String phone, String email, String password)
            + void updateAccount(Account account)
            + void changePassword(String oldPassword, String newPassword)
            + void deleteAccount()
        }

        class AccountAPIImpl implements AccountAPI
    }

    package account.business {
        package account.business.services{
            class CartService {

            }


            class AccountService {

            }
        }

    }

    package account.model {
        class Account {
            - id
            - firstName
            - lastName
            - phone
            - email
            - password
        }

        class Cart {
            - id
            - totalPrice
            - books
        }
    }

    package account.dto {
        class AccountDTO {
            - firstName
            - lastName
            - phone
            - email
            - password
        }

        class CartDTO {
            - totalPrice
            - books
        }
    }



    package account.persistence {
        class CartDAO {

        }


        class AccountDAO {

        }

        CartService -up- CartAPIImpl
        AccountService -up- AccountAPIImpl
        CartDAO -up- CartService
        AccountDAO -up- AccountService
    }

}

package shop {

    package shop.presentation {
        interface BookAPI {
            + Book getBooksBy(Map<BookProperty, String> criteria)

            + Book createBook(String title, String description, String isbn)

            + void setPropertiesFor(Book book, Map<BookProperty, List<String>> properties)
            + void removePropertiesFrom(Book book, Map<BookProperty, List<String>> properties)

            + void addBook(Book book)
            + void deleteBook(Book book)
        }

        class BookAPIImpl implements BookAPI

        interface BookAttributeAPI {
            + List<Author> getAuthors()
            + List<Category> getCategories()
            + List<Publisher> getPublishers()
            + void addAttributes(List<BookAttribute> bookAttributes)
            + void removeAttribute(BookAttribute bookAttribute)
        }

        class BookAttributeAPIImpl implements BookAttributeAPI

    }

    package shop.business {
        together {

            package shop.business.entities {
                abstract class BookAttribute {
                    + getName
                    + setName
                    - name
                }

                class Book {
                    - title
                    - description
                    - isbn
                    - publicationDate
                    - price
                    - stockQuantity
                    - publisher
                }

                together {
                    class Category extends BookAttribute

                    class Publisher extends BookAttribute

                    class Author extends BookAttribute
                }

                enum BookProperty {
                    TITLE
                    DESCRIPTION
                    ISBN
                    PUBLICATION_DATE
                    PRICE
                    STOCK_QUANTITY
                    PUBLISHER
                    CATEGORY
                    AUTHOR
                }

            }

            package shop.business.services {

                class BookAttributeService {

                }

                class BookService {

                }
            }
        }
    }

    package shop.persistence {

        class BookDAO {

        }


        class BookAttributeDAO {

        }


    }

    BookService -up- BookAPIImpl
    BookDAO -up-- BookService

    BookAttributeDAO -up- BookAttributeService
    BookAttributeService -up- BookAttributeAPIImpl

}

package order {
    package order.presentation {
        interface OrderAPI {
            + Order createOrder(Account account, Cart cart)
            + Order getOrderDetails(Order order)
            + void cancelOrder(Order order)
        }

        class OrderAPIImpl implements OrderAPI
    }

    package order.business{
        package order.business.entities {
            class Order {
                - orderNumber
                - orderDate
                - totalPrice
            }

            class OrderItem {
                - book
                - quantity
                - bookStatus
                - date
            }
        }

        package order.business.services {
            class OrderService {
                + createOrder(Account account, Cart cart)
                + getOrderDetails(Order order)
                + cancelOrder(Order order)
            }
        }
    }

    package order.persistence {
        class OrderDAO {

        }

        OrderService -up- OrderAPIImpl
        OrderDAO -up- OrderService
    }
}

package delivery {
    package delivery.presentation {
        interface DeliveryAPI {
            + Delivery createDelivery(Order order, Address address)
            + Delivery getDeliveryDetails(Order order)
            + void updateDelivery(Delivery delivery)
        }

        class DeliveryAPIImpl implements DeliveryAPI
    }
    package delivery.business {
        package delivery.business.entities {
            class Delivery {
                - date
            }

            class Address {
                - firstName
                - lastName
                - phone
                - street
                - city
                - postalCode
            }
        }

        package delivery.business.services {
            class DeliveryService {

            }
        }
    }

    package delivery.persistence {
        class DeliveryDAO {

        }

        DeliveryService -up- DeliveryAPIImpl
        DeliveryDAO -up- DeliveryService
    }
}

package checkout {
    package checkout.presentation {
        interface CheckoutAPI {
            + Invoice createInvoice(Order order, String paymentmethod)
            + Invoice getInvoiceDetails(Order order)
            + void processCheckout(Invoice invoice)
        }

        class CheckoutAPIImpl implements CheckoutAPI
    }
    package checkout.business {
        package checkout.business.entities {
            class Invoice {
                - invoiceNumber
                - invoiceDate
                - totalPrice
                - paymentmethod
            }
        }

        package checkout.business.services {
            class CheckoutService {

            }
        }
    }
    package checkout.persistence {
        class CheckoutDAO {

        }

        CheckoutService -up- CheckoutAPIImpl
        CheckoutDAO -up- CheckoutService
    }
}

@enduml
